{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","postsTodos","setPostsTodos","onSubmit","event","preventDefault","posts","data","newPost","Math","max","post","addPost","action","method","htmlFor","type","value","onChange","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a15881bd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todos } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todos } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/Todos';\nimport { User } from './types/User';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nconst todos: Todos[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const [postsTodos, setPostsTodos] = useState<Todos[]>(todos);\n\n  const getNewPostId = (posts: Todos[]) => {\n    const maxId = Math.max(\n      ...posts.map(post => post.id),\n    );\n\n    return maxId + 1;\n  };\n\n  const addPost = ({ id, ...data }: Todos) => {\n    const newPost = {\n      id: getNewPostId(postsTodos),\n      ...data,\n    };\n\n    setPostsTodos(post => [...post, newPost]);\n  };\n\n  const onReset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newPost: Todos = {\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    addPost(newPost);\n    onReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label htmlFor=\"todo-title\">Title:</label>\n          <input\n            id=\"todo-title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"todo-user\">User:</label>\n          <select\n            id=\"todo-user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={postsTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}